[tool.poetry]
name = "crypto_platform"
version = "0.1.0"
description = ""
authors = ["Tomas Toth <tomas.toth004@gmail.com>"]
license = "MIT"
#packages = [
#    { "include" = "src" },
#]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.3"
SQLAlchemy = "^1.4.44"
python-dotenv = "^0.21.0"
pytest = "^7.2.0"
pydantic = "^1.10.2"
pytest-asyncio = "^0.20.2"
ruff = "^0.0.128"
ssort = "^0.11.6"
apscheduler = "3.8.1"
playwright = "^1.28.0"
stem = "^1.8.1"
requests = { extras = ["socks"], version = "^2.28.1" }
transpose-data = "^3.1.2"
fastapi = "^0.89.1"
uvicorn = "^0.20.0"
asyncpg = "^0.27.0"
moralis = "^0.1.19"
defi-common = {path = "../defi-common", develop = true}
web3 = {git = "https://github.com/ethereum/web3.py.git"}
beanie = "^1.17.0"
gunicorn = "^20.1.0"

[tool.poetry.dev-dependencies]
black = "^22.10.0"
wps-light = "^0.16.1"
mypy = "^0.991"
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = [
  "src/"
]

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    # "I",  # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "N",
    #    "D",
    "U",
    "A",
    "YTT",
    "C90",
    "RUF",
    "M"
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.isort]
skip = ["main.py"]
